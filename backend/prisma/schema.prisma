// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Client {
  id       Int      @id @default(autoincrement())
  username String
  email    String   @unique
  password String
  role     String?
  orders   Order[]
}

model Category {
  id        Int       @id @default(autoincrement())
  image     String?
  type      String
  recipes   Recipe[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Recipe {
  id           Int            @id @default(autoincrement())
  image        String?
  title        String
  description  String
  quantity     Int            @default(1)
  total        Float          @default(0.00)
  price        Float          @default(0.00)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  category     Category?      @relation(fields: [categoryId], references: [id])
  categoryId   Int?
  orderDetails OrderDetails[]
}

model Order {
  id           Int            @id @default(autoincrement())
  subTotal     Float          @default(0.00)
  deliveryFee  Float          @default(0.00)
  delivery     Delivery?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  client       Client?        @relation(fields: [clientId], references: [id])
  clientId     Int?
  status       String
  orderDetails OrderDetails[]
}

model OrderDetails {
  id       Int     @id @default(autoincrement())
  recipe   Recipe? @relation(fields: [recipeId], references: [id])
  recipeId Int?
  quantity Int
  price    Float
  order    Order?  @relation(fields: [orderId], references: [id])
  orderId  Int?
}

model Delivery {
  id          Int      @id @default(autoincrement())
  firstname   String
  lastname    String
  email       String
  streetName  String
  city        String
  state       String
  zipcode     String
  country     String
  phoneNumber String
  order       Order?   @relation(fields: [orderId], references: [id])
  orderId     Int?     @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}